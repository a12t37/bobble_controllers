<launch>
  <arg name="paused" default="false"/>
  <arg name="gui" default="false"/>
	<include file="$(find gazebo_ros)/launch/empty_world.launch">
		<arg name="paused" value="$(arg paused)"/>
		<arg name="world_name" value="worlds/empty_sky.world" />
		<arg name="gui" value="$(arg gui)"/>
	</include>
	<param name="robot_description" command="$(find xacro)/xacro '$(find bobble_controllers)/test/xacro/bobble_world.urdf.xacro'" />
	<node name="bobble_spawner" pkg="gazebo_ros" type="spawn_model" args="-urdf -param robot_description -model bobblebot" respawn="false" output="screen" />
	<node name="controller_spawner" pkg="controller_manager" type="spawner"
		respawn="false" output="screen" ns="/bobble"
		args="bobble_balance_controller"/>
	<node pkg="bobble_controllers" type="BobbleStateHold" name="BobbleBotStateHolder" output="screen">
        <param name="configPackageName" value="bobble_controllers"/>
        <param name="configFileName" value="test/bad_balance_control_config.yaml"/>
    </node>
  <rosparam file="$(find bobble_controllers)/test/bad_balance_control_config.yaml" command="load"/>
  <test test-name="no_balance_test"
        pkg="bobble_controllers"
        type="no_balance_test"
        required="true"
        time-limit="20.0">
  </test>
  <node pkg="rosbag" type="record" name="rosbag_record_standard_data" respawn="true" output="screen" args="-O $(find bobble_controllers)/test/data/no_balance /bobble/bobble_balance_controller/bb_controller_status" />
</launch>
